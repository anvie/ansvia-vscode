import { workspace, TextDocument } from "vscode";

import fs = require('fs');
var yaml = require('js-yaml');


export function setupSyncGen() {
  const rootDir = workspace.workspaceFolders![0].uri.path;

  if (!rootDir) {
    return;
  }

  var config = yaml.safeLoad(fs.readFileSync(`${rootDir}/ansvia-vscode.yaml`));
    console.log(config);
    const c = config['sync_gen']['error_code'];

  workspace.onDidSaveTextDocument((document: TextDocument) => {
    // extension.runCommands(document);
    console.log(`document saved: ${document.fileName}`);
    if (document.fileName === `${rootDir}/${c['src']}`){
      genErrorCodeFromRust(rootDir, c['src'], c['outs']);
    }
  });
}

function genErrorCodeFromRust(rootDir:String, source:String, outs: Array<String>){
  console.log("Generating error codes...");

  let reName = new RegExp('^(pub)? ?enum ErrorCode ?{?$');
  let reDec = new RegExp('(\\w*) ?= ?(\\d*),?');

  let lines = fs.readFileSync(`${rootDir}/${source}`, 'utf8').split('\n');
  var inErrorCode = false;
  var newLines = [];
  
  newLines.push('// This file is autogenerated by ansvia-vscode');
  newLines.push('// don\'t edit by hand or your changes will lost without you knowing');

  newLines.push(`export default class ErrorCode {`);

  for (let line of lines){
    let linet = line.trim();

    // console.log('reName.test(' + linet + '): ' + reName.test(linet));

    if (!inErrorCode && reName.test(linet)){
      inErrorCode = true;
    }
    if (inErrorCode){
      if (linet.startsWith('///')){
        newLines.push('  ' + linet.substring(1));
      }else{
        let s = reDec.exec(linet);
        if (s && s.length === 3){
          newLines.push(`  static ${s[1]} = ${s[2]};`);
        }
      }
      if (linet === '}'){
        break;
      }
    }
  }

  newLines.push('}');

  let jsCode = newLines.join('\n');

  outs.forEach((fpath) => {
    if (fpath.startsWith('js:')){
      let path = fpath.substring(3);
      console.log("syncing error code to " + path + " ...");
      fs.writeFileSync(`${rootDir}/${path}`, jsCode);
    }
  });
}
